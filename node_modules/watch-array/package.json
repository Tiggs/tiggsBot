{
  "name": "watch-array",
  "version": "0.0.4",
  "description": "Watch any changes on arrays",
  "main": "index.js",
  "scripts": {
    "test": "fox"
  },
  "dependencies": {
    "new-list": "0.0.5"
  },
  "devDependencies": {
    "fox": "*"
  },
  "repository": {
    "url": "git@github.com:azer/watch-array.git",
    "type": "git"
  },
  "keywords": [
    "array",
    "list",
    "watch",
    "pubsub",
    "event"
  ],
  "author": {
    "name": "Azer KoÃ§ulu",
    "email": "azer@kodfabrik.com"
  },
  "license": "BSD",
  "readme": "## watch-array\n\nLets you subscribe to any changes on native JavaScript arrays.\n\n```js\nwatchArray = require('watch-array')\n\npeople = ['Joe', 'Smith']\n\nwatchArray(people, function(update){ // or watchArray.once(people, function(update){\n\n    update.add\n    // => { 1: Taylor, 2: Brown }\n\n    update.remove\n    // => [0]\n\n})\n\npeople.shift()\npeople.push('Taylor', 'Brown')\n```\n\n## Install\n\n```bash\n$ npm install watch-array\n```\n\n## How It Works?\n\n* It mixes the given array with [new-pubsub](http://github.com/azer/new-pubsub). So you actually have a minimalistic pub/sub API in the array.\n* It doesn't add new methods or change the behaviour of existing ones.\n* It overrides mutable methods like `push`, `splice` etc to emit the changes.\n\n![](https://dl.dropboxusercontent.com/s/vg71zdk29kckx04/npmel_12.jpg)\n",
  "_id": "watch-array@0.0.4",
  "dist": {
    "shasum": "af9d80287cd69ee141e585c4f321d7484d957bee",
    "tarball": "http://registry.npmjs.org/watch-array/-/watch-array-0.0.4.tgz"
  },
  "maintainers": [
    {
      "name": "azer",
      "email": "azer@kodfabrik.com"
    }
  ],
  "directories": {},
  "_shasum": "af9d80287cd69ee141e585c4f321d7484d957bee",
  "_resolved": "https://registry.npmjs.org/watch-array/-/watch-array-0.0.4.tgz",
  "_from": "watch-array@*"
}
